#pragma checksum "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c528ec4baaf75b3ea5570f4d58d62f9b4609834b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MusicPlayer_Index), @"mvc.1.0.view", @"/Views/MusicPlayer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\_ViewImports.cshtml"
using MediaPlayer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\_ViewImports.cshtml"
using MediaPlayer.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c528ec4baaf75b3ea5570f4d58d62f9b4609834b", @"/Views/MusicPlayer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a88e9f0a54e32f01d4cbfd2d9487efa44cbf39a2", @"/Views/_ViewImports.cshtml")]
    public class Views_MusicPlayer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("display"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 30%; display: inline-block;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "MusicPlayer", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "PlaylistManagement", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
  
    ViewData["Title"] = "Music Player";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script src=""https://unpkg.com/wavesurfer.js""></script>

<div id=""currentTrack"" style=""text-align:center; font:bold; font-size: 36px; color:purple; -webkit-text-stroke: 1px violet;""></div>

<div id=""waveform""></div>

<div class=""controls"" style=""text-align:center;"">
    <button onclick=""previousTrack()"">
        <img src=""/images/icons/Previous.png"" style=""vertical-align: middle;"" width=""50""/>
    </button>

    <button onclick=""skipBackward()"">
        <img src=""/images/icons/Backward.png"" style=""vertical-align: middle;"" width=""50""/>
    </button>

    <button onclick=""playPause()"">
        <img src=""/images/icons/PlayPause.png"" style=""vertical-align: middle;"" width=""50""/>
    </button>

    <button onclick=""skipForward()"">
        <img src=""/images/icons/Forward.png"" style=""vertical-align: middle;"" width=""50""/>
    </button>

    <button onclick=""toggleMute()"">
        <img src=""/images/icons/Sound.png"" style=""vertical-align: middle;"" width=""50""/>
    </button>

    <button oncl");
            WriteLiteral(@"ick=""nextTrack()"">
        <img src=""/images/icons/Next.png"" style=""vertical-align: middle;"" width=""50""/>
    </button>
</div>
<br />

<!-- Affiche toutes les playlists en music associÃ©es d'un utilisteur -->
<!-- TODO: clique sur le nom d'une playlist pour afficher les musiques qu'elle contient -->

<div style=""text-align: center"">
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c528ec4baaf75b3ea5570f4d58d62f9b4609834b6902", async() => {
                WriteLiteral(@"
        <!-- Ajoute une ligne dans la table playlist -->
        <label style=""font-size:36px;"">Create playlist</label>
        <button name=""action"" type=""submit"" value=""AP{0}"">
            <img src=""/images/icons/add.png"" style=""vertical-align:middle;"" width=""30"" name=""file"" value=""filename"" />
        </button>
        <br />
");
#nullable restore
#line 49 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
         foreach (var playlist in ViewData["playlists"] as IList<Playlist>)
        {

#line default
#line hidden
#nullable disable
                WriteLiteral("        <!-- Play Playlist -->\r\n");
                WriteLiteral("        <button type=\"button\"");
                BeginWriteAttribute("value", " value=\"", 2077, "\"", 2101, 1);
#nullable restore
#line 53 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 2085, playlist.IdUser, 2085, 16, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" style=\"vertical-align:middle;\">\r\n            <img src=\"/images/icons/Play.png\"");
                BeginWriteAttribute("onclick", " onclick=\"", 2181, "\"", 2217, 3);
                WriteAttributeValue("", 2191, "PlayPlaylist(", 2191, 13, true);
#nullable restore
#line 54 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 2204, playlist.Id, 2204, 12, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 2216, ")", 2216, 1, true);
                EndWriteAttribute();
                WriteLiteral(" width=\"30\"/>\r\n        </button>\r\n");
                WriteLiteral("        <label style=\"font-size:36px;\">");
#nullable restore
#line 57 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
                                  Write(playlist.PlaylistTitle);

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n        <input for=\"action\" type=\"hidden\" name=\"title\"");
                BeginWriteAttribute("value", " value=\"", 2380, "\"", 2388, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n");
                WriteLiteral("        <!-- Update la colonne PlaylistTitle dans la table playlist -->\r\n        <button name=\"action\" type=\"submit\"");
                BeginWriteAttribute("value", " value=\"", 2512, "\"", 2536, 3);
                WriteAttributeValue("", 2520, "UP{", 2520, 3, true);
#nullable restore
#line 61 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 2523, playlist.Id, 2523, 12, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 2535, "}", 2535, 1, true);
                EndWriteAttribute();
                WriteLiteral(" style=\"vertical-align:middle;\">\r\n            <img src=\"/images/icons/Edit.png\" width=\"30\" />\r\n        </button>\r\n        <!-- Supprime une ligne dans la table playlist -->\r\n        <button name=\"action\" type=\"submit\"");
                BeginWriteAttribute("value", " value=\"", 2754, "\"", 2778, 3);
                WriteAttributeValue("", 2762, "DP{", 2762, 3, true);
#nullable restore
#line 65 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 2765, playlist.Id, 2765, 12, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 2777, "}", 2777, 1, true);
                EndWriteAttribute();
                WriteLiteral(" style=\"vertical-align:middle;\">\r\n            <img src=\"/images/icons/Delete.png\" width=\"30\" />\r\n        </button>\r\n");
                WriteLiteral("        <br />\r\n");
#nullable restore
#line 70 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
         foreach (var music in ViewData["musics"] as IList<Music>)
        {
            if (playlist.Id == music.IdPlaylist)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <label");
                BeginWriteAttribute("class", " class=\"", 3079, "\"", 3099, 1);
#nullable restore
#line 74 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 3087, playlist.Id, 3087, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" for=\"action\" style=\"font-size:24px;\" name=\"title\"");
                BeginWriteAttribute("value", " value=\"", 3150, "\"", 3175, 1);
#nullable restore
#line 74 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 3158, music.MusicTitle, 3158, 17, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" ondblclick=\"this.readOnly=\'\';\">");
#nullable restore
#line 74 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
                                                                                                                                                  Write(music.MusicTitle);

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n                <input for=\"action\" type=\"hidden\" name=\"title\"");
                BeginWriteAttribute("value", " value=\"", 3297, "\"", 3305, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n                <!-- Update la colonne MusicTitle dans la table music -->\r\n");
                WriteLiteral("                <button name=\"action\" type=\"submit\"");
                BeginWriteAttribute("value", " value=\"", 3439, "\"", 3460, 3);
                WriteAttributeValue("", 3447, "UM{", 3447, 3, true);
#nullable restore
#line 78 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 3450, music.Id, 3450, 9, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 3459, "}", 3459, 1, true);
                EndWriteAttribute();
                WriteLiteral(" style=\"vertical-align:middle;\">\r\n                    <img src=\"/images/icons/edit.png\" width=\"20\" />\r\n                </button>\r\n");
                WriteLiteral("                <!-- Supprime une ligne dans la table music -->\r\n                <button name=\"action\" type=\"submit\"");
                BeginWriteAttribute("value", " value=\"", 3709, "\"", 3730, 3);
                WriteAttributeValue("", 3717, "DM{", 3717, 3, true);
#nullable restore
#line 83 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 3720, music.Id, 3720, 9, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 3729, "}", 3729, 1, true);
                EndWriteAttribute();
                WriteLiteral(" style=\"vertical-align: middle;\">\r\n                    <img src=\"/images/icons/delete.png\" width=\"20\" />\r\n                </button>\r\n                <br />\r\n");
#nullable restore
#line 87 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
            }
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("        <!-- Ajoute une ligne dans la table music -->\r\n        <input for=\"action\" type=\"file\" name=\"file\"");
                BeginWriteAttribute("value", " value=\"", 4020, "\"", 4028, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n        <button name=\"action\" type=\"submit\"");
                BeginWriteAttribute("value", " value=\"", 4077, "\"", 4101, 3);
                WriteAttributeValue("", 4085, "AM{", 4085, 3, true);
#nullable restore
#line 91 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
WriteAttributeValue("", 4088, playlist.Id, 4088, 12, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 4100, "}", 4100, 1, true);
                EndWriteAttribute();
                WriteLiteral(">\r\n            <img src=\"/images/icons/Add.png\" style=\"vertical-align: middle;\" width=\"20\" />\r\n        </button>\r\n        <br />\r\n");
#nullable restore
#line 95 "C:\Users\AlexZ\OneDrive\Bureau\MediaPlayer\WebApp\Views\MusicPlayer\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</div>

<script>
    // create : Create an instance, passing the container selector and options:
    var wavesurfer = WaveSurfer.create({
        container: '#waveform',
        waveColor: 'violet',
        progressColor: 'purple',
        // responsive: true
    });

    var musiclist;
    var playlistId;
    var idUser = document.querySelector('button[type=""button""]').value;
    console.log(idUser);
    var initPlaylist = document.querySelectorAll('button[name=""action""]')[1].value;
    var initPlaylistId = initPlaylist.substring(3, (initPlaylist.length - 1));
    console.log(initPlaylistId);
    let indexPlaylist = 0;
    var initMusiclist = document.getElementsByClassName(initPlaylistId);    
    console.log(initMusiclist);

    let playedSong = function (index = 0, playlist = initPlaylistId, musicList = initMusiclist) {
        indexPlaylist = index
        console.log(""playedSong before"");
        // currentTrack info
        document.getElementById(""currentTrack"").innerHTML =");
            WriteLiteral(@" musicList[indexPlaylist].innerHTML;
        // media / userId / playlistId / musicTitle  
        wavesurfer.load('/media/' + idUser + ""/"" + playlist + ""/"" + musicList[indexPlaylist].innerHTML);        
        console.log(""playedSong after"");
    }

    wavesurfer.on('ready', function () { // ready : When audio is loaded, decoded and the waveform drawn.
        console.log(""ready before"");
        wavesurfer.play();
        console.log(""ready after"");
    })

    wavesurfer.on('finish', function () {
        console.log(""finish before"");
        if (indexPlaylist + 1 < playlistSize) {
            indexPlaylist += 1;
        } else {
            indexPlaylist = 0;
        }
        playedSong(indexPlaylist, playlistId, musiclist);
        console.log(""finish after"");
    })        

    function PlayPlaylist(getPlaylistId) {
        playlistId = getPlaylistId;
        indexPlaylist = 0; // lorsqu'on change de playlist on commence au 1er track
        musiclist = document.getElements");
            WriteLiteral(@"ByClassName(playlistId);             
        playlistSize = musiclist.length;        
        playedSong(indexPlaylist, playlistId, musiclist);
    }

    function previousTrack() {
        console.log(""previousTrack before"");        
        if (indexPlaylist-1 >= 0) {
            indexPlaylist -= 1;
        } else {
            indexPlaylist = playlistSize-1;
        }
        playedSong(indexPlaylist, playlistId, musiclist);
        console.log(""previousTrack after"");
    }
    // Rewind skipLength seconds.
    function skipBackward() {
        wavesurfer.skipBackward();
    }

    // Plays if paused, pauses if playing.
    function playPause() {
        wavesurfer.playPause();
    }

    // Skip ahead skipLength seconds.
    function skipForward() {
        wavesurfer.skipForward();
    }
    // Toggles the volume on and off.
    function toggleMute() {
        wavesurfer.toggleMute();
    }

    function nextTrack() {        
        console.log(""nextTrack before"");
 ");
            WriteLiteral(@"       if (indexPlaylist+1 < playlistSize) {
            indexPlaylist += 1;
        } else {
            indexPlaylist = 0;
        }
        playedSong(indexPlaylist, playlistId, musiclist);
        console.log(""nextTrack after"");
    }
    // playedSong(indexPlaylist);
</script>


<script>
    document.querySelectorAll(""label"").forEach(function (node) {
        node.ondblclick = function () { // double click pour edit (mettre un input Ã  la place d'un label)
            var oldValue = this.innerHTML;
            var input = document.createElement(""input""); // input de changement de text du label

            input.value = oldValue;
            input.onblur = function () { // aprÃ¨s Ãªtre sorti du mode edit
                var hiddenInput = document.querySelector('input[type=""hidden""]');
                // si on voit qu'il n'y a rien dans le champs, on remet la valeur initial
                if (this.value != """") {
                    var newValue = this.value;
                    this.");
            WriteLiteral(@"parentNode.innerHTML = newValue;
                    hiddenInput.value = newValue;
                } else { // sinon on garde la nouvelle valeur
                    this.parentNode.innerHTML = oldValue;
                    hiddenInput.value = oldValue;
                }
            } // fin blur
            this.innerHTML = """";
            this.appendChild(input);
            input.focus();
        } // fin dblclick
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
